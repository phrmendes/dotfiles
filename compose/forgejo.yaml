services:
  ts-forgejo:
    image: docker.io/tailscale/tailscale:latest
    container_name: ts-forgejo
    hostname: forgejo
    restart: always
    environment:
      - TS_AUTHKEY=${TAILSCALE_FORGEJO_AUTHKEY}
      - TS_EXTRA_ARGS=--advertise-tags=tag:container
      - TS_STATE_DIR=/var/lib/tailscale
    volumes:
      - ts_forgejo:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    labels:
      - diun.enable=true

  forgejo:
    image: codeberg.org/forgejo/forgejo:11
    container_name: forgejo
    restart: always
    network_mode: service:ts-forgejo
    environment:
      - USER_GID=${PGID}
      - USER_UID=${PUID}
      - FORGEJO__database__DB_TYPE=postgres
      - FORGEJO__database__HOST=postgres:5432
      - FORGEJO__database__NAME=forgejo
      - FORGEJO__database__USER=${POSTGRES_USER}
      - FORGEJO__database__PASSWD=${POSTGRES_PASSWORD}
    volumes:
      - forgejo_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    # ports:
    #   - 3001:3000
    #   - 222:22
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - diun.enable=true

volumes:
  forgejo_data:
  ts_forgejo:
