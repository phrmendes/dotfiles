services:
  tailscale:
    image: docker.io/tailscale/tailscale:latest
    container_name: tailscale
    restart: always
    network_mode: host
    hostname: homelab
    volumes:
      - tailscale_data:/var/lib/tailscale
      - tailscale_socket:/var/run/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTHKEY}
      - TS_EXTRA_ARGS=--advertise-tags=tag:containers
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SOCKET=/var/run/tailscale/tailscaled.sock

  caddy:
    image: docker.io/caddy:latest
    restart: always
    container_name: caddy
    networks:
      - server
    depends_on:
      - tailscale
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - tailscale_socket:/var/run/tailscale
      - ./Caddyfile:/etc/caddy/Caddyfile

  adguardhome:
    image: docker.io/adguard/adguardhome:latest
    container_name: adguardhome
    restart: always
    volumes:
      - adguardhome_conf:/opt/adguardhome/conf
      - adguardhome_work:/opt/adguardhome/work
    ports:
      - 53:53
      - 53:53/udp
      - 8081:80
      - 3000:3000

  duplicati:
    image: docker.io/linuxserver/duplicati:latest
    container_name: duplicati
    restart: always
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - DUPLICATI__WEBSERVICE_PASSWORD=${DUPLICATI_WEBSERVICE_PASSWORD}
      - SETTINGS_ENCRYPTION_KEY=${DUPLICATI_ENCRYPTION_KEY}
    volumes:
      - duplicati_config:/config
      - duplicati_backups:/backups
      - duplicati_source:/source
      - syncthing_data:/syncthing:ro
    ports:
      - 8200:8200

  sftpgo:
    image: docker.io/drakkan/sftpgo:latest
    container_name: sftpgo
    restart: always
    volumes:
      - sftpgo_data:/var/lib/sftpgo
      - deluge_downloads:/downloads
      - jellyfin_movies:/movies
      - jellyfin_tvshows:/tvshows
      - syncthing_data:/syncthing
    ports:
      - 8080:8080
      - 2022:2022

  syncthing:
    image: docker.io/linuxserver/syncthing:latest
    container_name: syncthing
    restart: always
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - syncthing_config:/config
      - syncthing_data:/data
    ports:
      - 21027:21027/udp
      - 22000:22000
      - 22000:22000/udp
      - 8384:8384

  beszel-agent:
    image: docker.io/henrygd/beszel-agent:latest
    container_name: beszel-agent
    restart: always
    network_mode: host
    volumes:
      - beszel_socket:/beszel_socket
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - LISTEN=/beszel_socket/beszel.sock
      - KEY=ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHh93kUCxYYQhVuU5nGtdD43Sc/F/5m+1vqL25kqbWT2

  beszel:
    image: docker.io/henrygd/beszel:latest
    container_name: beszel
    restart: always
    ports:
      - 8090:8090
    volumes:
      - beszel_data:/beszel_data
      - beszel_socket:/beszel_socket
    depends_on:
      - beszel-agent

  dozzle:
    image: docker.io/amir20/dozzle:latest
    container_name: dozzle
    restart: always
    ports:
      - 8082:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOZZLE_ENABLE_ACTIONS=true
      - DOZZLE_ENABLE_SHELL=true

  ntfy:
    image: binwiederhier/ntfy
    container_name: ntfy
    restart: always
    command: serve
    ports:
      - 8083:80
    volumes:
      - ntfy_cache:/var/cache/ntfy
      - ntfy_data:/etc/ntfy
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}

  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    restart: always
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - deluge_config:/config
      - deluge_downloads:/downloads
      - jellyfin_movies:/movies
      - jellyfin_tvshows:/tvshows
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: always
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - jellyfin_data:/config
      - jellyfin_movies:/data/tvshows
      - jellyfin_tvshows:/data/movies
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 1900:1900/udp

  atuin:
    image: ghcr.io/atuinsh/atuin:latest
    container_name: atuin
    restart: always
    command: server start
    volumes:
      - atuin_config:/config
    ports:
      - 8888:8888
    environment:
      - ATUIN_HOST=0.0.0.0
      - ATUIN_OPEN_REGISTRATION=true
      - ATUIN_DB_URI=postgres://${ATUIN_DB_USERNAME}:${ATUIN_DB_PASSWORD}@postgres/${ATUIN_DB_NAME}
      - RUST_LOG=info,atuin_server=debug

  postgres:
    image: postgres:17
    container_name: postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${ATUIN_DB_USERNAME}
      - POSTGRES_PASSWORD=${ATUIN_DB_PASSWORD}
      - POSTGRES_DB=${ATUIN_DB_NAME}

volumes:
  adguardhome_conf:
  adguardhome_work:
  atuin_config:
  beszel_data:
  beszel_socket:
  caddy_config:
  caddy_data:
  deluge_config:
  deluge_downloads:
  duplicati_backups:
  duplicati_config:
  duplicati_source:
  jellyfin_data:
  jellyfin_movies:
  jellyfin_tvshows:
  ntfy_cache:
  ntfy_data:
  postgres_data:
  sftpgo_data:
  syncthing_config:
  syncthing_data:
  tailscale_data:
  tailscale_socket:

networks:
  server:
    name: server
