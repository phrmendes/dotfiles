services:
  npm:
    image: docker.io/jc21/nginx-proxy-manager:latest
    container_name: npm
    restart: always
    ports:
      - 80:80
      - 81:81
      - 443:443
    volumes:
      - npm_data:/data
      - letsencrypt:/etc/letsencrypt
    environment:
      - DB_POSTGRES_HOST=postgres
      - DB_POSTGRES_PORT=5432
      - DB_POSTGRES_USER=${POSTGRES_USER}
      - DB_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POSTGRES_NAME=npm
    depends_on:
      - postgres
    labels:
      - diun.enable=true

  diun:
    image: docker.io/crazymax/diun:latest
    container_name: diun
    restart: always
    command: serve
    volumes:
      - diun_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=${TZ}
      - DIUN_WATCH_WORKERS=20
      - DIUN_WATCH_SCHEDULE=0 */6 * * *
      - DIUN_WATCH_JITTER=30s
      - DIUN_PROVIDERS_DOCKER=true
    labels:
      - diun.enable=true

  adguardhome:
    image: docker.io/adguard/adguardhome:latest
    container_name: adguardhome
    restart: always
    volumes:
      - adguardhome_conf:/opt/adguardhome/conf
      - adguardhome_work:/opt/adguardhome/work
    ports:
      - 53:53
      - 53:53/udp
      - 8080:80
      - 3000:3000
    labels:
      - diun.enable=true

  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    restart: always
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - DUPLICATI__WEBSERVICE_PASSWORD=${DUPLICATI_WEBSERVICE_PASSWORD}
      - SETTINGS_ENCRYPTION_KEY=${DUPLICATI_ENCRYPTION_KEY}
    volumes:
      - duplicati_config:/config
      - duplicati_backups:/backups
      - duplicati_source:/source
      - syncthing_data:/backups/syncthing
      - postgres_dumps:/backups/postgres_dumps
      - npm_data:/backups/npm/data
      - letsencrypt:/backups/npm/letsencrypt
    ports:
      - 8200:8200
    labels:
      - diun.enable=true

  sftpgo:
    image: docker.io/drakkan/sftpgo:latest
    container_name: sftpgo
    restart: always
    volumes:
      - sftpgo_data:/var/lib/sftpgo
      - syncthing_data:/files/syncthing
      - postgres_dumps:/files/dumps:ro
      - transmission_watch:/files/watch
      - /mnt/external/:/files/external
    ports:
      - 8081:8080
      - 2022:2022
    labels:
      - diun.enable=true

  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    restart: always
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - syncthing_config:/config
      - syncthing_data:/data
    ports:
      - 21027:21027/udp
      - 22000:22000
      - 22000:22000/udp
      - 8384:8384
    labels:
      - diun.enable=true

  beszel-agent:
    image: docker.io/henrygd/beszel-agent:latest
    container_name: beszel-agent
    restart: always
    network_mode: host
    volumes:
      - beszel_socket:/beszel_socket
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - LISTEN=/beszel_socket/beszel.sock
      - KEY=ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINlh9LAAR9jXqvrkeP1dpOvQPbrcAzQVcyK90s97MaxR
    labels:
      - diun.enable=true

  beszel:
    image: docker.io/henrygd/beszel:latest
    container_name: beszel
    restart: always
    ports:
      - 8090:8090
    volumes:
      - beszel_data:/beszel_data
      - beszel_socket:/beszel_socket
    environment:
      - APP_URL=https://beszel.local.ohlongjohnson.tech
    depends_on:
      - beszel-agent
    labels:
      - diun.enable=true

  dozzle:
    image: docker.io/amir20/dozzle:latest
    container_name: dozzle
    restart: always
    ports:
      - 8082:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOZZLE_ENABLE_ACTIONS=true
      - DOZZLE_ENABLE_SHELL=true
    labels:
      - diun.enable=true

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    restart: always
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
      - USER=phrmendes
      - PASS=${TRANSMISSION_PASSWORD}
    volumes:
      - transmission_config:/config
      - transmission_watch:/watch
      - /mnt/external/downloads:/downloads
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    labels:
      - diun.enable=true

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: always
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - jellyfin_data:/config
      - /mnt/external/movies:/data/movies
      - /mnt/external/tvshows:/data/tvshows
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 1900:1900/udp
    labels:
      - diun.enable=true

  atuin:
    image: ghcr.io/atuinsh/atuin:latest
    container_name: atuin
    restart: always
    command: server start
    volumes:
      - atuin_config:/config
    ports:
      - 8888:8888
    environment:
      - ATUIN_HOST=0.0.0.0
      - ATUIN_OPEN_REGISTRATION=true
      - ATUIN_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/atuin
      - RUST_LOG=info,atuin_server=debug
    depends_on:
      - postgres
    labels:
      - diun.enable=true

  postgres:
    image: docker.io/postgres:17
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh:ro
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASES=atuin,npm
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - diun.enable=true

  pgbackup:
    image: docker.io/prodrigestivill/postgres-backup-local:latest
    container_name: pgbackup
    restart: always
    volumes:
      - postgres_dumps:/dumps
    environment:
      - TZ=${TZ}
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=atuin,npm
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SCHEDULE=@daily
      - BACKUP_ON_START=TRUE
      - BACKUP_DIR=/dumps
    depends_on:
      - postgres
    labels:
      - diun.enable=true

  adminer:
    image: docker.io/adminer:latest
    container_name: adminer
    restart: always
    ports:
      - 8083:8080
    labels:
      - diun.enable=true

volumes:
  adguardhome_conf:
  adguardhome_work:
  atuin_config:
  beszel_data:
  beszel_socket:
  diun_data:
  duplicati_backups:
  duplicati_config:
  duplicati_source:
  jellyfin_data:
  letsencrypt:
  npm_data:
  postgres_data:
  postgres_dumps:
  sftpgo_data:
  syncthing_config:
  syncthing_data:
  transmission_config:
  transmission_watch:
