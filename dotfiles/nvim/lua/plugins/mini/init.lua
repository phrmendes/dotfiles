local map = vim.keymap.set
local now, later = MiniDeps.now, MiniDeps.later
local helpers_mini = require("helpers.mini")

MiniDeps.add({
	source = "echasnovski/mini.nvim",
	depends = {
		"rafamadriz/friendly-snippets",
		"folke/snacks.nvim",
		"nvim-treesitter/nvim-treesitter",
	},
})

now(function()
	require("plugins.mini.base16")
	require("plugins.mini.files")
	require("plugins.mini.icons")
	require("plugins.mini.notify")
	require("plugins.mini.pick")
	require("plugins.mini.sessions")
	require("plugins.mini.starter")
	require("plugins.mini.statusline")
	require("plugins.mini.tabline")
end)

later(function()
	require("plugins.mini.ai")
	require("plugins.mini.align")
	require("plugins.mini.bracketed")
	require("plugins.mini.bufremove")
	require("plugins.mini.clue")
	require("plugins.mini.comment")
	require("plugins.mini.completion")
	require("plugins.mini.cursorword")
	require("plugins.mini.diff")
	require("plugins.mini.doc")
	require("plugins.mini.extra")
	require("plugins.mini.git")
	require("plugins.mini.hipatterns")
	require("plugins.mini.indentscope")
	require("plugins.mini.jump")
	require("plugins.mini.jump2d")
	require("plugins.mini.keymap")
	require("plugins.mini.misc")
	require("plugins.mini.move")
	require("plugins.mini.operators")
	require("plugins.mini.pairs")
	require("plugins.mini.snippets")
	require("plugins.mini.splitjoin")
	require("plugins.mini.surround")
	require("plugins.mini.test")
	require("plugins.mini.trailspace")
	require("plugins.mini.visits")
end)

map("n", "<leader>/", function() MiniPick.builtin.grep_live() end, { desc = "Live grep" })
map("n", "<leader>?", function() MiniPick.builtin.help() end, { desc = "Help" })
map("n", "<leader>=", function() MiniMisc.resize_window() end, { noremap = true, desc = "Resize to default size" })
map("n", "<leader><leader>", function() MiniPick.builtin.files() end, { desc = "Files" })
map("n", "<leader><del>", function() MiniNotify.clear() end, { desc = "Clear notifications" })
map("n", "<leader>K", function() MiniExtra.pickers.keymaps() end, { desc = "Keymaps" })
map("n", "<leader>N", function() MiniNotify.show_history() end, { desc = "Notifications" })
map("n", "<leader>bb", function() helpers_mini.pick.buffers() end, { desc = "List" })
map("n", "<leader>bd", function() MiniBufremove.delete() end, { desc = "Delete" })
map("n", "<leader>bw", function() MiniBufremove.wipeout() end, { desc = "Wipeout" })
map("n", "<leader>e", function() helpers_mini.files.open() end, { desc = "Explorer" })
map("n", "<leader>gA", "<cmd>Git add --all<cr>", { desc = "Add (repo)" })
map("n", "<leader>gL", function() MiniExtra.pickers.git_commits() end, { desc = "Log (repo)" })
map("n", "<leader>gP", "<cmd>Git push<cr>", { desc = "Push" })
map("n", "<leader>ga", "<cmd>Git add %<cr>", { desc = "Add (file)" })
map("n", "<leader>gc", "<cmd>Git commit<cr>", { desc = "Commit" })
map("n", "<leader>gd", function() MiniDiff.toggle_overlay(0) end, { desc = "Diff (file)" })
map("n", "<leader>gh", function() MiniExtra.pickers.git_hunks() end, { desc = "Hunks" })
map("n", "<leader>gl", function() MiniExtra.pickers.git_commits() end, { desc = "Log (file)" })
map("n", "<leader>gp", "<cmd>Git pull<cr>", { desc = "Pull" })
map("n", "<leader>la", function() helpers_mini.visits.add_label() end, { desc = "Add" })
map("n", "<leader>ld", function() helpers_mini.visits.remove_label() end, { desc = "Delete" })
map("n", "<leader>ll", function() MiniExtra.pickers.visit_labels() end, { desc = "List" })
map("n", "<leader>m", function() MiniExtra.pickers.marks() end, { desc = "Marks" })
map("n", "<leader>v", function() MiniExtra.pickers.visit_paths() end, { desc = "Visits" })
map("n", "<leader>z", function() MiniMisc.zoom() end, { desc = "Zoom" })
map({ "n", "x" }, "<leader>gs", function() MiniGit.show_at_cursor({ split = "horizontal" }) end, {
	desc = "Show at cursor",
})
