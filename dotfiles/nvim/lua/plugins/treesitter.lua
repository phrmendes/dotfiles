MiniDeps.now(function()
	MiniDeps.add({
		source = "nvim-treesitter/nvim-treesitter",
		depends = { "nvim-treesitter/nvim-treesitter-textobjects", "nvim-treesitter/nvim-treesitter-context" },
		hooks = { post_checkout = function() vim.cmd("TSUpdate") end },
	})

	require("nvim-treesitter.configs").setup({
		ensure_installed = {
			"bash",
			"bibtex",
			"caddy",
			"css",
			"csv",
			"cuda",
			"diff",
			"dockerfile",
			"dot",
			"eex",
			"git_config",
			"git_rebase",
			"gitattributes",
			"gitcommit",
			"gitignore",
			"go",
			"gotmpl",
			"hcl",
			"heex",
			"helm",
			"html",
			"htmldjango",
			"http",
			"hyprlang",
			"java",
			"javascript",
			"json",
			"just",
			"latex",
			"lua",
			"luadoc",
			"luap",
			"make",
			"markdown",
			"markdown_inline",
			"mermaid",
			"nginx",
			"nix",
			"python",
			"regex",
			"requirements",
			"sql",
			"ssh_config",
			"templ",
			"terraform",
			"todotxt",
			"toml",
			"typescript",
			"vim",
			"vimdoc",
			"yaml",
		},
		indent = { enable = true },
		textobjects = {
			select = { enable = false },
			move = {
				enable = true,
				goto_next_start = { ["]f"] = "@function.outer", ["]c"] = "@class.outer" },
				goto_next_end = { ["]F"] = "@function.outer", ["]C"] = "@class.outer" },
				goto_previous_start = { ["[f"] = "@function.outer", ["[c"] = "@class.outer" },
				goto_previous_end = { ["[F"] = "@function.outer", ["[C"] = "@class.outer" },
			},
		},
		highlight = { enable = true, additional_vim_regex_highlighting = { "markdown" } },
		incremental_selection = {
			enable = true,
			keymaps = {
				init_selection = "<c-s>",
				node_incremental = "<c-s>",
				scope_incremental = false,
				node_decremental = "<c-bs>",
			},
		},
	})
end)
